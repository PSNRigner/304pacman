import sys
import exceptions


if __name__ == '__main__':
    argc = len(sys.argv)
    if argc != 4:
        print "Usage: %s file c1 c2" % sys.argv[0]
        exit(84)
    c1 = sys.argv[2]
    c2 = sys.argv[3]
    if len(c1) != 1 or len(c2) != 1:
        print "Invalid characters"
        exit(84)
    if c1 == c2:
        print "Same characters c1 and c2 provided"
        exit(84)
    try:
        map_file = open(sys.argv[1])

        f = None
        p = None
        tab = []
        i = 0
        for line in map_file:
            line = line.strip('\n').strip('\r').strip('\n')
            tab.append([])
            for j in range(0, len(line)):
                if line[j] == 'F':
                    f = (j, i, 0)
                elif line[j] == 'P':
                    p = (j, i)
                v = {
                    '1': -1,
                    '0': -2,
                    'F': -3,
                    'P': -4
                }.get(line[j], -5)
                if v == -5:
                    print "Unknown character %s" % line[j]
                    map_file.close()
                    exit(84)
                tab[i].append(v)
            i += 1

        map_file.close()

        if f is None:
            print "No F found in file"
            exit(84)
        if p is None:
            print "No P found in file"
            exit(84)

        previous = [f]
        ok = False

        def check(lst, x, y, l):
            if x < 0 or y < 0 or x >= len(tab[y]) or y >= len(tab):
                return False
            if tab[y][x] == -4:
                return True
            if tab[y][x] != -2:
                return False
            tab[y][x] = l + 1
            lst.append((x, y, l + 1))

        while len(previous) > 0:
            tmp = []
            for p in previous:
                if check(tmp, p[0], p[1] - 1, p[2]) or check(tmp, p[0] + 1, p[1], p[2]) or check(tmp, p[0], p[1] + 1, p[2]) or check(tmp, p[0] - 1, p[1], p[2]):
                    ok = True
                    tmp = []
                    break
            previous = tmp

        if ok:
            for ta in tab:
                tmp = ""
                for c in ta:
                    v = {
                        -1: c1,
                        -2: c2,
                        -3: 'F',
                        -4: 'P'
                    }.get(c, str(c % 10))
                    tmp += v
                print tmp
        else:
            print "No path found"
            exit(84)
    except exceptions.IOError as ex:
        print "Error in map file : %s" % ex
        exit(84)
    except Exception as ex:
        print "Catched exception in program (%s) : %s" % (type(ex), ex)
        exit(84)
